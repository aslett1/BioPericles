#!/usr/bin/env python

import argparse
import logging
import os
import sys

from argparse import FileType, ArgumentError

from biopericles.ClusterConsensus import ClusterConsensus

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def stderr(text):
  print >> sys.stderr, text

def get_cluster_name(path):
  filename = os.path.basename(path)
  name = os.path.splitext(filename)[0] # remove extension
  return name

def file_size(filehandle):
  filename = filehandle.name
  return os.path.getsize(filename)

if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parser.description = "Find areas of consensus between aligned sequences in a multifasta"
  parser.add_argument('multifasta', nargs="+", type=FileType(mode='r'),
                      help="Multifasta with aligned sequences")
  parser.add_argument('--output', '-o', dest="output_file", type=str, default='-',
                      help="Output file (defaults to stdout)")

  args = parser.parse_args()
  if os.path.isfile(args.output_file):
    stderr("Output file '%s' already exists.  Exiting" % args.output_file)
    exit(1)

  cluster = ClusterConsensus()

  for cluster_fasta in sorted(args.multifasta, key=file_size):
    logger.info("Loading sequences from %s" % cluster_fasta.name)
    cluster.load_fasta_file(cluster_fasta)
    cluster_name = get_cluster_name(cluster_fasta.name)
    cluster.cluster_name = cluster_name

    if args.output_file == '-':
      cluster.output_file = sys.stdout
      cluster.write_consensus()
    else:
      try:
        with open(args.output_file, 'wa') as output_file:
          cluster.output_file = output_file
          cluster.write_consensus()
      except IOError as e:
        message = """\
  Could not open output file '{output_file}' for writing, some results may be missing.
  Original error:
  {exception}"""
        stderr(message.format(output_file=args.output_file, exception=e))
        exit(1)
