#!/usr/bin/env python

import argparse
import csv
import logging
import os
import sys

from argparse import FileType

from biopericles.SNPFinder import SNPFeatureBuilder

def stderr(text):
  print >> sys.stderr, text

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__) 

if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parser.description = "Takes an aligned multifasta, outputs features based on SNPs"
  parser.add_argument('input_file', type=FileType(mode='r'),
                      help="Aligned multifasta or VCF (assumes fasta by default)")
  parser.add_argument('--input_format', '-f', choices=['fasta', 'vcf'],
                      default='fasta', help="input_file format")
  parser.add_argument('--vcf-output', dest='vcf_output_file',
                      type=FileType(mode='w'),
                      help="File to output the VCF used when creating features")
  parser.add_argument('--features-output', '-o', dest="output_file", type=str,
                      default='-', help="Output file (defaults to stdout)")
  parser.add_argument('--snp-sites-executable', '-s', dest="snp_sites_exec", type=str,
                      default='snp-sites', help="snp-sites executable (defaults to snp-sites)")

  args = parser.parse_args()

  if args.output_file == '-':
    output_file = sys.stdout
  else:
    output_file = open(args.output_file, 'w')

  builder = SNPFeatureBuilder()
  if args.input_format == 'fasta':
    builder.snp_sites_exec = args.snp_sites_exec
    builder.load_fasta_sequences(args.input_file)
    builder.create_vcf_from_sequences()
  elif args.input_format == 'vcf':
    builder.vcf_input_file = args.input_file
  if args.vcf_output_file:
    builder.write_vcf_file(args.vcf_output_file)
  builder.create_features()

  output_csv = csv.writer(output_file)
  output_csv.writerow(["Features"] + builder.feature_labels)
  for sequence_name, features in builder.features.items():
    output_csv.writerow([sequence_name] + map(str, features))

  output_file.close()
